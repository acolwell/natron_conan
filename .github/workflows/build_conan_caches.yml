name: Build Conan Caches

on:
  workflow_dispatch: {}
  push:
    paths:
      - 'scripts/getBuildConanCachesPackageInfo.py'
      - 'scripts/natron_conan_env.py'
      - '.github/workflows/build_conan_caches.yml'
      - 'recipes/natron/all/conanfile.py'
      - 'modules/conan-center-index'

  pull_request:
    paths:
      - 'scripts/getBuildConanCachesPackageInfo.py'
      - 'scripts/natron_conan_env.py'
      - '.github/workflows/build_conan_caches.yml'
      - 'recipes/natron/all/conanfile.py'
      - 'modules/conan-center-index'

  schedule:
    - cron:  '11 6 * * *'

jobs:
  get_packages_to_build:

    name: Get Packages to Build
    runs-on: ubuntu-latest

    outputs:
      package_info: ${{ steps.gen_package_info.outputs.package_info }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Generating Package Info
        id: gen_package_info
        run: |
          python scripts/getBuildConanCachesPackageInfo.py >> $GITHUB_OUTPUT

  build_package_matrix:
    strategy:
      fail-fast: false
      matrix:
        os:
          - runs_on: ubuntu-latest
            conan_profile: linux_default
          - runs_on: windows-latest
            conan_profile: msvc_profile
            conan_build_workspace: 'D:/cbw'
          - runs_on: macos-13
            conan_profile: macos_default
        packages: ${{ fromJson(needs.get_packages_to_build.outputs.package_info) }}

    name: Build ${{ matrix.os.runs_on }} - ${{ matrix.packages.name }}
    runs-on: ${{ matrix.os.runs_on }}
    continue-on-error: true
    needs: [get_packages_to_build]

    env:
      CONAN_BUILD_WORKSPACE: ${{ matrix.os.conan_build_workspace }}
      CONAN_CACHE_FILENAME: conan-cache-save_${{ matrix.packages.name }}_${{ matrix.os.runs_on }}.tgz

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Install Linux system packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install build-essential cmake extra-cmake-modules libgl-dev \
            libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev \
            libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev \
            libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev \
            libxxf86vm-dev libxcb-glx0-dev libxcb-render-util0-dev libxcb-xkb-dev \
            libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev \
            libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev \
            libxcb-dri3-dev libxcb-cursor-dev libxcb-dri2-0-dev libxcb-dri3-dev \
            libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev \
            libxcb-util-dev libxcb-util0-dev libxkbfile-dev uuid-dev

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies

      - name: Install Pip requirements
        run: |
          pip install -r .github/workflows/requirements.txt

      - name: Install conan config
        run: |
          conan config install -t dir config

      - name: Add Natron specific Conan remotes
        run: |
          conan remote remove conancenter
          conan remote add natron_recipes ${{ github.workspace }}
          conan remote add natron_conancenter ${{ github.workspace }}/modules/conan-center-index
          conan remote add conancenter https://center2.conan.io

      - name: Install dependencies
        run: |
          conan install -pr:a ${{ matrix.os.conan_profile }} --build=missing --version=${{ matrix.packages.version }} ${{ matrix.packages.extra_options }} ${{ matrix.packages.path }}

      - name: Remove unnecessary files from cache before building
        run: |
          conan cache clean '*'

      - name: Build package
        run: |
          conan install -pr:a ${{ matrix.os.conan_profile }} --build=missing --requires=${{ matrix.packages.name }}/${{ matrix.packages.version }} ${{ matrix.packages.extra_options }}

      - name: Remove unnecessary files from cache
        run: |
          conan cache clean '*'

      - name: Save cache to file
        run: |
          conan cache save --file=${{ env.CONAN_CACHE_FILENAME }} '*:*'

      - name: Upload cache
        uses: actions/upload-artifact@v4.3.1
        with:
          name:  ${{ env.CONAN_CACHE_FILENAME }}
          path:  ${{ env.CONAN_CACHE_FILENAME }}

  merge_packages_matrix:
    strategy:
      fail-fast: false
      matrix:
        os:
          - runs_on: ubuntu-latest
            conan_profile: linux_default
          - runs_on: windows-latest
            conan_profile: msvc_profile
            conan_build_workspace: 'D:/cbw'
          - runs_on: macos-13
            conan_profile: macos_default

    name: Merge ${{ matrix.os.runs_on }} packages
    runs-on: ${{ matrix.os.runs_on }}
    needs: [build_package_matrix]

    env:
      CONAN_BUILD_WORKSPACE: ${{ matrix.os.conan_build_workspace }}
      CONAN_CACHE_FILENAME: conan-cache-save_${{ matrix.os.runs_on }}.tgz

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Install Linux system packages
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install build-essential cmake extra-cmake-modules libgl-dev \
            libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev \
            libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev \
            libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev \
            libxxf86vm-dev libxcb-glx0-dev libxcb-render-util0-dev libxcb-xkb-dev \
            libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev \
            libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev \
            libxcb-dri3-dev libxcb-cursor-dev libxcb-dri2-0-dev libxcb-dri3-dev \
            libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev \
            libxcb-util-dev libxcb-util0-dev libxkbfile-dev uuid-dev

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: conan-cache-save_*_${{ matrix.os.runs_on }}.tgz
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies

      - name: Install Pip requirements
        run: |
          pip install -r .github/workflows/requirements.txt

      - name: Install conan config
        run: |
          conan config install -t dir config

      - name: Add Natron specific Conan remotes
        run: |
          conan remote remove conancenter
          conan remote add natron_recipes ${{ github.workspace }}
          conan remote add natron_conancenter ${{ github.workspace }}/modules/conan-center-index
          conan remote add conancenter https://center2.conan.io

      - name: Add each package to cache
        run: |
          python3 scripts/restoreConanCacheSaves.py --remove artifacts

      - name: Remove unnecessary files from cache
        run: |
          conan cache clean '*'

      - name: Build or Install Natron dependencies
        working-directory: ./recipes/natron/all
        run: |
          conan install -pr:a ${{ matrix.os.conan_profile }} --build=missing --version=conan_build . --lockfile-out=${{ github.workspace }}/${{ matrix.os.runs_on }}_conan.lock

      - name: Dump New Lockfile
        run: |
          cat ${{ matrix.os.runs_on }}_conan.lock

      - name: Save cache to file
        run: |
          conan cache save --file=${{ env.CONAN_CACHE_FILENAME }} '*:*'

      - name: Upload cache
        uses: actions/upload-artifact@v4.3.1
        with:
          name:  ${{ env.CONAN_CACHE_FILENAME }}
          path:  ${{ env.CONAN_CACHE_FILENAME }}
