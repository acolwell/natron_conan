name: Build FFmpeg Cache

on:
  workflow_dispatch: {}
  #push: {}
  #pull_request: {}

jobs:
  get_packages_to_build:

    name: Get Packages to Build
    runs-on: ubuntu-latest

    outputs:
      package_info: ${{ steps.gen_package_info.outputs.package_info }}
      merge_info: ${{ steps.gen_package_info.outputs.merge_info }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Setup Conan environment
        uses: ./.github/workflows/conan_setup_action

      - name: Generating Package Info
        id: gen_package_info
        run: |
          python scripts/getBuildConanCachesPackageInfo.py ffmpeg  >> $GITHUB_OUTPUT

  build_package_matrix:
    strategy:
      fail-fast: false
      matrix:
        packages: ${{ fromJson(needs.get_packages_to_build.outputs.package_info) }}

    name: Build ${{ matrix.packages.conan_profile }} - ${{ matrix.packages.name }}
    runs-on: ${{ matrix.packages.runs_on }}
    continue-on-error: true
    needs: [get_packages_to_build]

    env:
      CONAN_HOME: ${{ matrix.packages.runs_on == 'windows-latest' && format('D:\cbw', github.workspace) || '~/.conan2'}}
      CONAN_CACHE_FILENAME: conan_cache_save-${{ matrix.packages.name }}-${{ matrix.packages.conan_profile }}.tgz

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Setup Conan environment
        uses: ./.github/workflows/conan_setup_action
        with:
          conan_profile: ${{ matrix.packages.conan_profile }}
          restore_cache_filename: ${{ format('conan_cache_save-{0}.tgz', matrix.packages.conan_profile) }}

      - name: Build package
        continue-on-error: true
        run: |
          conan install -pr:a ${{ matrix.packages.conan_profile }} ${{ matrix.packages.build_args  }} --build=missing

      - name: Dump FFmpeg Config Log
        run: |
          python3 scripts/dump_ffmpeg_config_log.py

      - name: Remove unnecessary files from cache
        run: |
          conan cache clean '*'

      - name: Remove msys2 package from cache
        if: runner.os == 'Windows'
        run: |
          conan remove -c "msys2/*"

      - name: Save cache to file
        run: |
          conan cache save --file=${{ env.CONAN_CACHE_FILENAME }} '*:*'

      - name: Upload cache
        uses: actions/upload-artifact@v4.3.1
        with:
          name:  ${{ env.CONAN_CACHE_FILENAME }}
          path:  ${{ env.CONAN_CACHE_FILENAME }}

