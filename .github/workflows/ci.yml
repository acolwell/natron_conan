name: Tests

on:
  workflow_dispatch: {}
  push: {}
  pull_request: {}

  schedule:
    - cron:  '12 12 * * *'

jobs:
  linux_test:
    name: Test Linux
    runs-on: ubuntu-latest

    env:
      CONAN_CACHE_FILENAME: 'conan-cache-save_ubuntu-latest.tgz'

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Install Linux system packages
        run: |
          sudo apt update
          sudo apt install build-essential cmake extra-cmake-modules libgl-dev \
            libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev \
            libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev \
            libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev \
            libxxf86vm-dev libxcb-glx0-dev libxcb-render-util0-dev libxcb-xkb-dev \
            libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev \
            libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev \
            libxcb-dri3-dev libxcb-cursor-dev libxcb-dri2-0-dev libxcb-dri3-dev \
            libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev \
            libxcb-util-dev libxcb-util0-dev libxkbfile-dev uuid-dev

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies

      - name: Install Pip requirements
        run: |
          pip install -r .github/workflows/requirements.txt

      - name: Install conan config
        run: |
          conan config install -t dir config

      - name: Restore conan cache
        run: |
          curl -L -o ${{ env.CONAN_CACHE_FILENAME }} https://github.com/acolwell/natron_conan_env/releases/download/conan_cache/${{ env.CONAN_CACHE_FILENAME }}
          conan cache restore ${{ env.CONAN_CACHE_FILENAME }}
          rm ${{ env.CONAN_CACHE_FILENAME }}

      - name: Add Natron specific Conan remotes
        run: |
          conan remote remove conancenter
          conan remote add natron_recipes ${{ github.workspace }}
          conan remote add natron_conancenter ${{ github.workspace }}/modules/conan-center-index
          conan remote add conancenter https://center2.conan.io

      - name: Build openfx-misc
        run: |
          conan create -pr:a linux_default recipes/openfx-misc/all --version=master --build=missing

      - name: Build Natron
        run: |
          conan create -pr:a linux_default recipes/natron/all --version=conan_build --build=missing --lockfile-out=linux_conan.lock

      - name: Dump New Lockfile
        run: |
          cat linux_conan.lock

  win_test:
    name: Test Windows
    runs-on: windows-latest

    env:
      CONAN_BUILD_WORKSPACE: 'D:/cbw'
      CONAN_CACHE_FILENAME: 'conan-cache-save_windows-latest.tgz'

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies

      - name: Install Pip requirements
        run: |
          pip install -r .github/workflows/requirements.txt

      - name: Install conan config
        run: |
          conan config install -t dir config

      - name: Restore conan cache
        run: |
          curl -L -o ${{ env.CONAN_CACHE_FILENAME }} https://github.com/acolwell/natron_conan_env/releases/download/conan_cache/${{ env.CONAN_CACHE_FILENAME }}
          conan cache restore ${{ env.CONAN_CACHE_FILENAME }}
          Remove-Item ${{ env.CONAN_CACHE_FILENAME }}

      - name: Add Natron specific Conan remotes
        run: |
          conan remote remove conancenter
          conan remote add natron_recipes ${{ github.workspace }}
          conan remote add natron_conancenter ${{ github.workspace }}/modules/conan-center-index
          conan remote add conancenter https://center2.conan.io

      - name: Build openfx-misc
        run: |
          conan create -pr:a msvc_profile recipes\openfx-misc\all --version=master --build=missing

      - name: Build Natron
        run: |
          conan create -pr:a msvc_profile recipes\natron\all --version=conan_build --build=missing --lockfile-out=msvc_conan.lock

      - name: Dump New Lockfile
        run: |
          cat msvc_conan.lock

  macos_test:
    name: Test MacOS (x86_64)
    runs-on: macos-13

    env:
      CONAN_CACHE_FILENAME: 'conan-cache-save_macos-13.tgz'

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies

      - name: Install Pip requirements
        run: |
          pip install -r .github/workflows/requirements.txt

      - name: Install conan config
        run: |
          conan config install -t dir config

      - name: Restore conan cache
        run: |
          if curl -f -L -o ${{ env.CONAN_CACHE_FILENAME }} https://github.com/acolwell/natron_conan_env/releases/download/conan_cache/${{ env.CONAN_CACHE_FILENAME }}; then
            conan cache restore ${{ env.CONAN_CACHE_FILENAME }}
            rm ${{ env.CONAN_CACHE_FILENAME }}
          else
            echo "Failed to download cache file : ${{ env.CONAN_CACHE_FILENAME }}"
          fi

      - name: Add Natron specific Conan remotes
        run: |
          conan remote remove conancenter
          conan remote add natron_recipes ${{ github.workspace }}
          conan remote add natron_conancenter ${{ github.workspace }}/modules/conan-center-index
          conan remote add conancenter https://center2.conan.io

      - name: Build openfx-misc
        run: |
          conan create -pr:a macos_default recipes/openfx-misc/all --version=master --build=missing

      - name: Build Natron
        run: |
          conan create -pr:a macos_default recipes/natron/all --version=conan_build --build=missing --lockfile-out=macos_conan.lock

      - name: Dump New Lockfile
        run: |
          cat macos_conan.lock

  macos_arm_test:
    name: Test MacOS (arm64)
    runs-on: macos-14

    env:
      CONAN_CACHE_FILENAME: 'conan-cache-save_macos-14.tgz'

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies

      - name: Install Pip requirements
        run: |
          pip install -r .github/workflows/requirements.txt

      - name: Install conan config
        run: |
          conan config install -t dir config

      - name: Restore conan cache
        run: |
          if curl -f -L -o ${{ env.CONAN_CACHE_FILENAME }} https://github.com/acolwell/natron_conan_env/releases/download/conan_cache/${{ env.CONAN_CACHE_FILENAME }}; then
            conan cache restore ${{ env.CONAN_CACHE_FILENAME }}
            rm ${{ env.CONAN_CACHE_FILENAME }}
          else
            echo "Failed to download cache file : ${{ env.CONAN_CACHE_FILENAME }}"
          fi

      - name: Add Natron specific Conan remotes
        run: |
          conan remote remove conancenter
          conan remote add natron_recipes ${{ github.workspace }}
          conan remote add natron_conancenter ${{ github.workspace }}/modules/conan-center-index
          conan remote add conancenter https://center2.conan.io

      - name: Build openfx-misc
        run: |
          conan create -pr:a macos_arm_default recipes/openfx-misc/all --version=master --build=missing

      - name: Build Natron
        run: |
          conan create -pr:a macos_arm_default recipes/natron/all --version=conan_build --build=missing --lockfile-out=macos_arm_conan.lock

      - name: Dump New Lockfile
        run: |
          cat macos_arm_conan.lock

