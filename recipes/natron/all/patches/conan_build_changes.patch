diff --git a/CMakeLists.txt b/CMakeLists.txt
index 13c18c1..d50f653 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -57,24 +57,25 @@ endif()
 find_package(Python3 COMPONENTS Interpreter Development)
 find_package(Qt5 5.15 CONFIG REQUIRED COMPONENTS Core Gui Network Widgets Concurrent)
 
-if(IS_DEBUG_BUILD AND WIN32)
+#if(IS_DEBUG_BUILD AND WIN32)
     # Explicitly setting SHIBOKEN_PYTHON_LIBRARIES variable to avoid PYTHON_DEBUG_LIBRARY-NOTFOUND
     # link errors on Windows debug builds.
-    set(SHIBOKEN_PYTHON_LIBRARIES ${Python3_LIBRARIES})
-endif()
-find_package(Shiboken2 5.15 CONFIG REQUIRED COMPONENTS libshiboken2 shiboken2)
+#    set(SHIBOKEN_PYTHON_LIBRARIES ${Python3_LIBRARIES})
+#endif()
+find_package(shiboken2 5.15 REQUIRED COMPONENTS libshiboken2 shiboken2)
 
-if(IS_DEBUG_BUILD AND WIN32)
+#if(IS_DEBUG_BUILD AND WIN32)
     # Remove NDEBUG from Shiboken2 INTERFACE_COMPILE_DEFINITIONS so it is not inherited in debug builds.
-    get_property(ShibokenInterfaceDefs TARGET Shiboken2::libshiboken PROPERTY INTERFACE_COMPILE_DEFINITIONS)
-    list(REMOVE_ITEM ShibokenInterfaceDefs NDEBUG)
-    set_property(TARGET Shiboken2::libshiboken PROPERTY INTERFACE_COMPILE_DEFINITIONS ShibokenInterfaceDefs)
-endif()
+#    get_property(ShibokenInterfaceDefs TARGET Shiboken2::libshiboken PROPERTY INTERFACE_COMPILE_DEFINITIONS)
+#    list(REMOVE_ITEM ShibokenInterfaceDefs NDEBUG)
+#    set_property(TARGET Shiboken2::libshiboken PROPERTY INTERFACE_COMPILE_DEFINITIONS ShibokenInterfaceDefs)
+#endif()
 
-find_package(PySide2 5.15 CONFIG REQUIRED COMPONENTS pyside2)
+find_package(pyside2 5.15 CONFIG REQUIRED COMPONENTS libpyside2)
 set(QT_VERSION_MAJOR 5)
-get_target_property(PYSIDE_INCLUDE_DIRS PySide2::pyside2 INTERFACE_INCLUDE_DIRECTORIES)
-string(REGEX REPLACE "(.*)QtCore$" "\\1" Qt5_INCLUDE_DIR ${Qt5Core_INCLUDE_DIRS})
+#get_target_property(PYSIDE_INCLUDE_DIRS PySide2::pyside2 INTERFACE_INCLUDE_DIRECTORIES)
+set(PYSIDE_INCLUDE_DIRS ${pyside2_INCLUDE_DIRS})
+#string(REGEX REPLACE "(.*)QtCore$" "\\1" Qt5_INCLUDE_DIR ${Qt5Core_INCLUDE_DIRS})
 set(QTCORE_INCLUDE_DIRS ${Qt5_INCLUDE_DIR} ${Qt5Core_INCLUDE_DIRS})
 set(QTGUI_INCLUDE_DIRS ${Qt5Gui_INCLUDE_DIRS})
 set(QTWIDGETS_INCLUDE_DIRS ${Qt5Widgets_INCLUDE_DIRS})
@@ -104,7 +105,7 @@ if(UNIX AND NOT APPLE)
     find_package(ECM NO_MODULE)
     set(CMAKE_MODULE_PATH ${ECM_MODULE_PATH} ${CMAKE_MODULE_PATH})
     find_package(X11 REQUIRED)
-    find_package(Wayland COMPONENTS Client Egl)
+    find_package(wayland COMPONENTS client egl)
 elseif(APPLE)
     enable_language(OBJCXX)
 elseif(WIN32)
diff --git a/Engine/CMakeLists.txt b/Engine/CMakeLists.txt
index bd9eebd..f9dae3a 100644
--- a/Engine/CMakeLists.txt
+++ b/Engine/CMakeLists.txt
@@ -17,15 +17,19 @@
 # along with Natron.  If not, see <http://www.gnu.org/licenses/gpl-2.0.html>
 # ***** END LICENSE BLOCK *****
 
-include(FindPkgConfig)
-
-pkg_check_modules(Cairo REQUIRED IMPORTED_TARGET cairo fontconfig)
+find_package(cairo COMPONENTS cairo)
+find_package(Fontconfig COMPONENTS Fontconfig)
 
 file(GLOB NatronEngine_HEADERS *.h)
 file(GLOB NatronEngine_SOURCES *.cpp)
 
+set(tmp_list "${PYSIDE_INCLUDE_DIRS}")
+list(FILTER tmp_list INCLUDE REGEX .*PySide2.*)
+set(PYSIDE_BASE_INCLUDE_DIR ${tmp_list})
+message("PYSIDE_BASE_INCLUDE_DIR : ${PYSIDE_BASE_INCLUDE_DIR}")
+
 set(PYENGINE_OUT ${CMAKE_CURRENT_BINARY_DIR}/Qt${QT_VERSION_MAJOR})
-set(PYENGINE_INCLUDE_DIRS ${PYSIDE_INCLUDE_DIRS} ${PYSIDE_INCLUDE_DIRS}/QtCore)
+set(PYENGINE_INCLUDE_DIRS ${PYSIDE_INCLUDE_DIRS} ${PYSIDE_BASE_INCLUDE_DIR}/QtCore)
 list(APPEND PYENGINE_INCLUDE_DIRS ${QTCORE_INCLUDE_DIRS} ${Python3_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})
 list(TRANSFORM PYENGINE_INCLUDE_DIRS PREPEND "-I" OUTPUT_VARIABLE PYENGINE_INCS)
 set(PYENGINE_HEADER PySide2_Engine_Python.h)
@@ -40,13 +44,13 @@ set(shiboken_args
 if(APPLE)
     list(PREPEND shiboken_args -I${Qt5_DIR}/../../../include)
  endif()
- 
+
 execute_process(COMMAND ${Python3_EXECUTABLE} ../tools/utils/sourceList.py typesystem_engine.xml ${PYENGINE_OUT}
     WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
     OUTPUT_VARIABLE PyEngine_SOURCES)
 set_property(SOURCE ${PyEngine_SOURCES} PROPERTY SKIP_AUTOGEN ON)
 add_custom_command(OUTPUT ${PyEngine_SOURCES}
-    COMMAND Shiboken2::shiboken2 ${shiboken_args}
+    COMMAND shiboken2 ${shiboken_args}
     COMMAND bash ${POST_SHIBOKEN} ${PYENGINE_OUT}/NatronEngine natronengine
     DEPENDS ${PYENGINE_HEADER} ${NatronEngine_HEADERS} ${POST_SHIBOKEN} typesystem_engine.xml
     WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
@@ -76,10 +80,10 @@ target_link_libraries(NatronEngine
         HostSupport
         Boost::headers
         Boost::serialization
-        PkgConfig::Cairo
+        cairo::cairo
     PRIVATE
-        Shiboken2::libshiboken
-        PySide2::pyside2
+        shiboken2::libshiboken2
+        pyside2::libpyside2
         Qt5::Core
         Qt5::Concurrent
         Qt5::Network
@@ -101,7 +105,7 @@ target_include_directories(NatronEngine
     PUBLIC
         ../Global/glad$<IF:$<CONFIG:Debug>,Deb,Rel>/include
     PRIVATE
-        ${PYSIDE_INCLUDE_DIRS}/QtCore
+        ${PYSIDE_BASE_INCLUDE_DIR}/QtCore
         .
         ..
         ../Global
diff --git a/Gui/CMakeLists.txt b/Gui/CMakeLists.txt
index d20159d..4aeb782 100644
--- a/Gui/CMakeLists.txt
+++ b/Gui/CMakeLists.txt
@@ -21,10 +21,15 @@ file(GLOB NatronEngine_HEADERS ../Engine/*.h)
 file(GLOB NatronGui_HEADERS *.h)
 file(GLOB NatronGui_SOURCES *.cpp)
 
+set(tmp_list "${PYSIDE_INCLUDE_DIRS}")
+list(FILTER tmp_list INCLUDE REGEX .*PySide2.*)
+set(PYSIDE_BASE_INCLUDE_DIR ${tmp_list})
+message("PYSIDE_BASE_INCLUDE_DIR : ${PYSIDE_BASE_INCLUDE_DIR}")
+
 set(PYGUI_OUT ${CMAKE_CURRENT_BINARY_DIR}/Qt${QT_VERSION_MAJOR})
 set(PYGUI_INCLUDE_DIRS . .. ../Engine ../Global ../libs/OpenFX/include)
-list(APPEND PYGUI_INCLUDE_DIRS ${PYSIDE_INCLUDE_DIRS} ${PYSIDE_INCLUDE_DIRS}/QtCore
-    ${PYSIDE_INCLUDE_DIRS}/QtGui ${PYSIDE_INCLUDE_DIRS}/QtWidgets)
+list(APPEND PYGUI_INCLUDE_DIRS ${PYSIDE_INCLUDE_DIRS} ${PYSIDE_BASE_INCLUDE_DIR}/QtCore
+    ${PYSIDE_BASE_INCLUDE_DIR}/QtGui ${PYSIDE_BASE_INCLUDE_DIR}/QtWidgets)
 list(APPEND PYGUI_INCLUDE_DIRS ${QTCORE_INCLUDE_DIRS} ${QTGUI_INCLUDE_DIRS}
     ${QTWIDGETS_INCLUDE_DIRS} ${Python3_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})
 list(TRANSFORM PYGUI_INCLUDE_DIRS PREPEND "-I" OUTPUT_VARIABLE PYGUI_INCS)
@@ -46,7 +51,7 @@ execute_process(COMMAND ${Python3_EXECUTABLE} ../tools/utils/sourceList.py types
     OUTPUT_VARIABLE PyGui_SOURCES)
 set_property(SOURCE ${PyGui_SOURCES} PROPERTY SKIP_AUTOGEN ON)
 add_custom_command(OUTPUT ${PyGui_SOURCES}
-    COMMAND Shiboken2::shiboken2 ${shiboken_args}
+    COMMAND shiboken2 ${shiboken_args}
     COMMAND bash ${POST_SHIBOKEN} ${PYGUI_OUT}/NatronGui natrongui
     DEPENDS ${PYGUI_HEADER} ${NatronEngine_HEADERS} ${NatronGui_HEADERS} ${POST_SHIBOKEN} typesystem_natronGui.xml
     WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
@@ -63,8 +68,8 @@ list(APPEND NatronGui_SOURCES
 add_library(NatronGui STATIC ${NatronGui_HEADERS} ${NatronGui_SOURCES})
 target_link_libraries(NatronGui
     PUBLIC
-        Shiboken2::libshiboken
-        PySide2::pyside2
+        shiboken2::libshiboken2
+        pyside2::libpyside2
         Qt5::Core
         Qt5::Concurrent
         Qt5::Network
@@ -77,9 +82,9 @@ target_link_libraries(NatronGui
 )
 target_include_directories(NatronGui
     PRIVATE
-        ${PYSIDE_INCLUDE_DIRS}/QtCore
-        ${PYSIDE_INCLUDE_DIRS}/QtGui
-        ${PYSIDE_INCLUDE_DIRS}/QtWidgets
+        ${PYSIDE_BASE_INCLUDE_DIR}/QtCore
+        ${PYSIDE_BASE_INCLUDE_DIR}/QtGui
+        ${PYSIDE_BASE_INCLUDE_DIR}/QtWidgets
         .
         ..
         ../Engine
diff --git a/HostSupport/CMakeLists.txt b/HostSupport/CMakeLists.txt
index 86d772e..37f0004 100644
--- a/HostSupport/CMakeLists.txt
+++ b/HostSupport/CMakeLists.txt
@@ -18,7 +18,7 @@
 # ***** END LICENSE BLOCK *****
 
 # see https://cmake.org/cmake/help/latest/module/FindEXPAT.html
-find_package(EXPAT REQUIRED)
+find_package(expat REQUIRED)
 
 file(GLOB HostSupport_HEADERS
     ../libs/OpenFX/HostSupport/include/*.h
@@ -46,7 +46,7 @@ set(HostSupport_SOURCES
 add_library(HostSupport STATIC ${HostSupport_SOURCES})
 target_link_libraries(HostSupport
     PRIVATE
-        EXPAT::EXPAT
+        expat::expat
 )
 target_include_directories(HostSupport
     PUBLIC
diff --git a/libs/libmv/libmv/logging/logging.h b/libs/libmv/libmv/logging/logging.h
index dcc6a3a..a544f60 100644
--- a/libs/libmv/libmv/logging/logging.h
+++ b/libs/libmv/libmv/logging/logging.h
@@ -21,6 +21,9 @@
 #ifndef LIBMV_LOGGING_LOGGING_H
 #define LIBMV_LOGGING_LOGGING_H
 
+#ifdef ERROR
+#undef ERROR
+#endif
 #include <glog/logging.h>
 
 #ifdef DEBUG
@@ -34,7 +37,7 @@
 true ? (void) 0 : google::LogMessageVoidify() & LOG(severity)
 #endif
 
-#define LG LIBMV_LOG(INFO)
+//#define LG LIBMV_LOG(INFO)
 #define V0 LIBMV_LOG(INFO)
 #define V1 LIBMV_LOG(INFO)
 #define V2 LIBMV_LOG(INFO)
